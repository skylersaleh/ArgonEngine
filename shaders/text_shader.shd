//
//  Shader.vsh
//  NeonRush
//
//  Created by Skyler Saleh on 4/23/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

uniform mediump vec4 color;
uniform float smoothness;
uniform float metalness;


varying mediump vec2 texVarying;
varying mediump vec3 subpixelA;
varying mediump vec3 subpixelB;
varying mediump vec4 map_c;

varying mediump float size;

#ifdef VERTEX_SHADER
attribute mediump vec2 position;
attribute mediump vec2 texture_coord;
attribute mediump vec4 map_location;

void main()
{
    mat4 m=projection_matrix*view_matrix*matrix;
    vec4 v1=m*(vec4(1.,1.,0.,1.)+vec4(position,0.,0.));
    vec4 v2=m*(vec4(-1.,-1.,0.,1.)+vec4(position,0.,0.));
    size = distance(v1.xyz/v1.w,v2.xyz/v2.w);
   gl_Position =m*vec4(position,0.0,1.);
    if(v1[0]-v2[0]>0.){
        subpixelA=vec3(0.4,0.7,1.2);
        subpixelB=vec3(1.2,0.7,0.4);
    }else{
        subpixelB=vec3(0.4,0.7,1.2);
        subpixelA=vec3(1.2,0.7,0.4);
    }
    texVarying=texture_coord;
    map_c = map_location;
	
}
#endif
#ifdef FRAGMENT_SHADER
uniform mediump sampler2D texture;
void main()
{
#ifndef DEPTH_ONLY
    float inverse_size = .1/(0.01+size);
    vec2 offset =vec2(0.002,0.0005)*inverse_size;
    float antialias = 1.*inverse_size;
    float cutoff = max(0.8,0.8);

    float v =dot(texture2D(texture,texVarying),map_c);
    float v2 =dot(texture2D(texture,texVarying+offset),map_c);
    float v3 =dot(texture2D(texture,texVarying-offset),map_c);
  float main =smoothstep(cutoff-antialias,cutoff+antialias,v);
  float red =smoothstep(cutoff-antialias,cutoff+antialias,v2);
  float blue =smoothstep(cutoff-antialias,cutoff+antialias,v3);

  gl_FragColor.w = (red*0.4+blue*0.4+main*0.5)*(max(inverse_size,1.))*color.a;
  gl_FragColor.rgb=(vec3(main)*0.6+red*subpixelA*0.6+blue*subpixelB*0.6)*(max(inverse_size,1.))*color.rgb;
#endif

  
}
#endif
