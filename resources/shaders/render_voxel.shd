//
//  Shader.vsh
//  NeonRush
//
//  Created by Skyler Saleh on 4/23/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

uniform mediump vec4 specular;
uniform mediump vec4 color;
uniform mediump mat4 matrix;
uniform mediump mat4 camera_matrix;
uniform mediump mat4 camera_normal;
uniform mediump mat4 normal_matrix;


varying vec3 diffuse_color;

varying mediump vec3 ambientGlobal,ambient,a;
varying mediump vec3 nl,hv,nl2;

varying mediump vec3 normal;
varying mediump vec4 ecPos;
uniform mediump vec3 camera_pos;
uniform mediump vec2 pixel_scale;
uniform mediump vec2 pixel_off;

#ifdef VERTEX_SHADER
attribute mediump vec4 PositionAttribute;
attribute mediump vec3 NormalAttribute;
void main()
{
    normal=normalize(mat3(camera_normal*normal_matrix)*NormalAttribute);
    
    ecPos =camera_matrix* matrix * PositionAttribute;
    
    ambient = vec3(0.4)*color.xyz;
    ambientGlobal = vec3(0.1)*color.xyz;
    
    // Compute the light direction
    
    diffuse_color=color.rgb;
    gl_Position = ecPos;
}
#endif
#ifdef FRAGMENT_SHADER
uniform sampler2D data1;
void main()
{
    mediump vec3 n =normal;
    vec3 v1 = texture2D(data1,gl_FragCoord.xy*pixel_scale+pixel_off*0.5).xyz;
    vec3 v2 = texture2D(data1,gl_FragCoord.xy*pixel_scale+normalize(normal.xy)*pixel_off+pixel_off*0.5).xyz;
    vec3 v = v1-v2;
    
    
    gl_FragColor = vec4(diffuse_color*(v*v)*100.,0.00);
    
    
}
#endif