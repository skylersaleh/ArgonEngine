//Generated by the Argon Build System



#ifndef __RAYMARCH_TEST__
#define __RAYMARCH_TEST__

#include <ArgonEngine/Node.h>
#include <ArgonEngine/Hardware.h>
#include <ArgonEngine/Sprite.h>
#include <iostream>
#include "StreamedTexture.h"
#include "RayTracingTest.h"

struct RayMarchingTest : public Argon::Node {
    Argon::Sprite sprite;
    Argon::Input input;
    Argon::MeshFormat model;
    float & scale = sprite.uniform.get_scalar("scale");
    RayMarchingTest(){
        name="Ray March Test";
        sprite.set_shader("shader://raymarch.shd");
        sprite.dimensions.set(20,20.,0.);
    }
    std::shared_ptr<Node> animate(float time){
        scale =input[Argon::kInputIDMouseY].value+1.;
        return input[' '].value?std::make_shared<RayTracingTest>():nullptr;
    }

};
#endif
